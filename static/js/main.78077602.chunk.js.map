{"version":3,"sources":["Positions.js","BirthDate.js","Sex.js","Fired.js","Name.js","Card.js","Edit.js","App.js","serviceWorker.js","index.js"],"names":["Positions","className","hidden","disabled","selected","value","BirthDate","useState","Date","startDate","setStartDate","onChange","date","Sex","type","name","Fired","Name","placeholder","Card","position","sex","fired","Edit","props","inputStateHandler","setState","count","state","inputStateRemove","scrollToBottom","scroll","Array","this","map","onClick","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOAoBeA,EAlBG,WAEd,OACE,8BACE,+BACE,4BAAQC,UAAU,mBAChB,4BAAQC,QAAM,EAACC,UAAQ,EAACC,UAAQ,EAACC,OAAK,GAAtC,oDACA,4BAAQA,MAAM,YAAd,oDACA,4BAAQA,MAAM,cAAd,0DACA,4BAAQA,MAAM,UAAd,wCACA,4BAAQA,MAAM,UAAd,oDACA,4BAAQA,MAAM,UAAd,kD,yBCDGC,G,MAPG,WAAO,IAAD,EACYC,mBAAS,IAAIC,MADzB,mBACfC,EADe,KACJC,EADI,KAEtB,OACE,kBAAC,IAAD,CAAYT,UAAU,yBAAyBG,SAAUK,EAAWE,SAAU,SAAAC,GAAI,OAAIF,EAAaE,QCexFC,EArBH,WACV,OACE,yBAAKZ,UAAU,0BACf,2BAAOA,UAAU,QACjB,2BACIa,KAAK,QACLC,KAAK,SACLV,MAAM,SAJV,+CAOJ,+BACI,2BACIS,KAAK,QACLC,KAAK,SACLV,MAAM,WAJd,iDCKeW,EAfD,WACV,OACE,0BAAMf,UAAU,sBACd,sEAEE,2BACEA,UAAU,OACVc,KAAK,UACLD,KAAK,gBCAFG,EARF,WACX,OACE,yBAAKhB,UAAU,QACb,2BAAOA,UAAU,cAAcc,KAAK,OAAOG,YAAY,oECiB9CC,EAfF,SAAC,GAAuC,EAAtCJ,KAAsC,EAAhCK,SAAgC,EAAtBR,KAAsB,EAAhBS,IAAgB,EAAXC,MACxC,OAEE,yBAAKrB,UAAU,iCAEX,yBAAKA,UAAU,6BAAf,qBAA8C,6BAAK,kBAAC,EAAD,OACnD,yBAAKA,UAAU,kCAAf,yDAAyD,6BAAK,kBAAC,EAAD,OAC9D,yBAAKA,UAAU,6BAAf,4EAAwD,6BAAK,kBAAC,EAAD,OAC7D,yBAAKA,UAAU,4BAAf,qBAA6C,6BAAK,kBAAC,EAAD,OAClD,yBAAKA,UAAU,8BAAf,+DAAsD,6BAAK,kBAAC,EAAD,S,iBC8BpDsB,E,YAvCb,WAAaC,GAAQ,IAAD,8BAClB,4CAAMA,KAIRC,kBAAoB,WAClB,EAAKC,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAQ,KAPV,EAWpBE,iBAAmB,WACjB,EAAKH,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAQ,KAbV,EAiBpBG,eAAiB,WACbC,gBAAOD,kBAhBT,EAAKF,MAAQ,CAACD,MAAO,GAFH,E,sEAqBV,IAAD,OACP,OACE,yBAAK1B,UAAU,YAEZ,YAAI+B,MAAMC,KAAKL,MAAMD,QAAQO,KAAI,kBAChC,yBAAKjC,UAAU,MAAMkC,QAAS,EAAKL,gBACjC,yBAAK7B,UAAU,WACb,4BAAQa,KAAK,SAASb,UAAU,sCAAsCkC,QAAS,EAAKV,mBAApF,oDACA,4BAAQX,KAAK,SAASb,UAAU,yCAAyCkC,QAAS,EAAKN,kBAAvF,+CAEF,kBAAC,EAAD,e,GAhCOO,IAAMC,WCQVC,EARH,WACV,OACE,yBAAKrC,UAAU,OACb,kBAAC,EAAD,QCGcsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.78077602.chunk.js","sourcesContent":["import React from 'react';\n\nconst Positions = () => {\n\n    return (\n      <form>\n        <label>\n          <select className=\"form-control-md\">\n            <option hidden disabled selected value>Выберите</option>\n            <option value=\"Director\">Директор</option>\n            <option value=\"Accountant\">Бухгалтер</option>\n            <option value=\"Logist\">Логист</option>\n            <option value=\"Seller\">Продавец</option>\n            <option value=\"Loader\">Грузчик</option>\n          </select>\n        </label>\n      </form>\n    );\n}\n\nexport default Positions;\n","import React, { useState } from 'react';\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst BirthDate = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  return (\n    <DatePicker className=\"DatePicker text-center\" selected={startDate} onChange={date => setStartDate(date)} />\n  );\n};\n\nexport default BirthDate;\n","import React from 'react';\n\nconst Sex = () => {\n  return (\n    <div className='Sex font-weight-normal'>\n    <label className='mr-2'>\n    <input\n        type=\"radio\"\n        name=\"gender\"\n        value=\"male\"\n    /> Мужской\n</label>\n<label>\n    <input\n        type=\"radio\"\n        name=\"gender\"\n        value=\"female\"\n    /> Женский\n</label>\n</div>\n  )\n};\n\nexport default Sex;\n","import React from 'react';\n\nconst Fired = () => {\n    return (\n      <form className=\"font-weight-normal\">\n        <label>\n          Уволен\n          <input\n            className=\"ml-2\"\n            name=\"isGoing\"\n            type=\"checkbox\"\n            />\n        </label>\n      </form>\n    );\n}\n\nexport default Fired;\n","import React from 'react';\n\nconst Name = () => {\n  return (\n    <div className=\"Name\">\n      <input className=\"text-center\" name=\"text\" placeholder=\"Введите ФИО\"></input>\n    </div>\n  );\n}\n\nexport default Name;\n","import React from 'react';\nimport Positions from './Positions';\nimport BirthDate from './BirthDate';\nimport Sex from './Sex';\nimport Fired from './Fired';\nimport Name from './Name';\n\nconst Card = ({name, position, date, sex, fired}) => {\n  return (\n\n    <div className=\"Card font-weight-bold p-5 m-2\">\n\n        <div className=\"item name text-center m-2\">ФИО<br/><Name /></div>\n        <div className=\" item position text-center m-2\">Должность<br/><Positions /></div>\n        <div className=\"item date text-center m-2\">Дата Рождения<br/><BirthDate /></div>\n        <div className=\"item sex text-center m-2\">Пол<br/><Sex /></div>\n        <div className=\"item fired text-center m-2\">Увольнение<br/><Fired /></div>\n\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Edit.css';\nimport { animateScroll as scroll } from \"react-scroll\";\n\nclass Edit extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {count: 1,}\n  }\n\n  inputStateHandler = () => {\n    this.setState({\n      count: this.state.count + 1,\n    });\n  }\n\n  inputStateRemove = () => {\n    this.setState({\n      count: this.state.count - 1,\n    })\n  }\n\n  scrollToBottom = () => {\n      scroll.scrollToBottom();\n  };\n\n  render() {\n    return (\n      <div className=\"Edit m-2\">\n\n        {[...Array(this.state.count)].map(() => (\n          <div className=\"new\" onClick={this.scrollToBottom}>\n            <div className=\"buttons\">\n              <button type=\"button\" className=\"add m-3 btn btn-outline-dark btn-md\" onClick={this.inputStateHandler}>Добавить</button>\n              <button type=\"button\" className=\"delete m-3 btn btn-outline-dark btn-md\" onClick={this.inputStateRemove}>Удалить</button>\n            </div>\n            <Card/>\n          </div>))}\n\n      </div>\n    );\n  }\n}\n\nexport default Edit;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Edit from './Edit';\n\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Edit />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}